<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace是接口的全类名 -->
<mapper namespace="com.dorm.student.dao.StudentMapper">

	<!-- 使用resultMap映射实体类和字段之间的一一对应关系 -->
	<resultMap type="com.dorm.student.model.Student" id="StudentResultMap">
		<id property="sid" column="sid" />
		<result property="sname" column="sname" />
		<result property="gender" column="gender" />
		<result property="start" column="start" />
		<result property="sgrade" column="sgrade" />
		<result property="sclass" column="sclass" />
		<result property="status" column="status" />
		<result property="character" column="character" />
		<result property="dormitory_id" column="dormitory_id" />
		
		<association property="dormitory" javaType="com.dorm.dormitory.model.Dormitory">
			<id property="did" column="did" />
			<result property="dno" column="dno" />
			<result property="category" column="category" />
			<result property="capacity" column="capacity" />
			<result property="occupied" column="occupied" />
			<result property="honor" column="honor" />
			<result property="picdescription" column="picdescription" />
			<result property="textdescription" column="textdescription" />
			<result property="building_id" column="building_id" />
		</association>
	</resultMap>

	<!--查询所有学生 -->
	<select id="queryStudent" resultMap="StudentResultMap">
		SELECT * 
		FROM STUDENT S 
		LEFT JOIN DORMITORY D 
		ON S.DORMITORY_ID = D.DID
		WHERE DORMITORY_ID !=0
	</select>
	<!--查询指定楼宇 -->
	<select id="getDormitory" parameterType="String" resultMap="StudentResultMap">
		SELECT * FROM Dormitory D,BUILDING B where D.BUILDING_ID=B.BID AND daid = #{daid}
	</select>
	<!--添加指定楼宇 -->
	<insert id="saveStudentBatch" parameterType="java.util.List">
		INSERT ALL 
		INTO STUDENT(SID,SNAME,SPASSWORD,GENDER,ADMISSION,SGRADE,SCLASS,STATUS,CHARACTER,DORMITORY_ID) 
		VALUES
		<foreach collection="list" item="student" separator="INTO STUDENT(SID,SNAME,SPASSWORD,GENDER,ADMISSION,SGRADE,SCLASS,STATUS,CHARACTER,DORMITORY_ID) VALUES">
		(#{student.sid},
		 #{student.sname},
		 #{student.spassword},
		 #{student.gender},
		 #{student.admission},
		 #{student.sgrade},
		 #{student.sclass},
		 #{student.status},
		 #{student.character},
		 #{student.dormitory_id}
		)
		</foreach>
		SELECT * FROM dual
	</insert>
	<update id="modifyDormAdmin" parameterType="com.dorm.dormadmin.model.DormAdmin">
		UPDATE DORMADMIN SET 
			DAPASSWORD=#{dapassword},
			TRUENAME=#{truename},
			SEX=#{sex},
			WORKPHONE=#{workphone},
			INTRODUCTION=#{introduction},
			BUILDING_ID=#{building_id}
		WHERE DAID = #{daid}	
	</update>
	<!--批量删除指定楼宇 -->
	<delete id="deleteDormAdmin">
		DELETE FROM DORMADMIN WHERE daid in
		<foreach collection="array" item = "daid" open="(" separator="," close=")">
   	   		#{daid}
    	</foreach>  
	</delete>
	<select id="getDormitoryNumber" parameterType="int" resultType="int">
		SELECT COUNT(*) FROM DORMITORY WHERE BUILDING_ID = #{bid}
	</select>
	<select id="getDormitoryId" resultType="int">
		SELECT did FROM DORMITORY WHERE BUILDING_ID = #{buildingId} and DNO = #{dormitoryDno}
	</select>
	
	<select id="queryDormitoryByBuilding" resultType="com.dorm.dormitory.model.Dormitory">
		
		SELECT DORM.* FROM (
       		SELECT D.*,ROWNUM RN FROM DORMITORY D WHERE BUILDING_ID = #{bid} ORDER BY DNO ASC) DORM
		WHERE 
			RN&gt;(#{currentPage}-1)*#{pageSize} 
		AND RN&lt;=#{currentPage}*#{pageSize}
	</select>
	<select id="getDormitoryOccupied" resultType="java.util.Map">
		SELECT D.BUILDING_ID,S.DORMITORY_ID,dno,COUNT(*) occ
			FROM STUDENT S 
			lEFT JOIN DORMITORY D 
			ON S.DORMITORY_ID = D.DID 
    		WHERE D.DNO IS NOT NULL
    		GROUP BY DNO,S.DORMITORY_ID,D.BUILDING_ID 
    		ORDER BY DNO
	</select>

	<select id="isStudent" resultType="int">
		SELECT COUNT(*) 
		FROM STUDENT 
		WHERE SID = #{sid} 
		AND 
		SPASSWORD = #{spassword}
	</select>
	
	<!--根据性别查询待分配学生 -->
	<select id="getDistrStudent" parameterType="String" resultType="com.dorm.student.model.Student">
		SELECT *  
		FROM STUDENT 
		WHERE GENDER = #{gender} 
		AND 
		DORMITORY_ID = 0
	</select>
	
	<update id="updateOccupied" parameterType="java.util.Map">
		
		<foreach collection="list" item = "item" open="begin" close=";end;" separator=";">
			UPDATE DORMITORY
			<set>OCCUPIED = #{item.OCC}</set>
   	   		 WHERE DID = #{item.DORMITORY_ID}
   	   	</foreach>  
	</update>
	
	<!--宿舍分配学生 -->
	<update id="updateDistr">
		
		<foreach collection="array" item = "item" open="begin" close=";end;" separator=";">
			UPDATE DORMITORY
			<set>OCCUPIED = #{item.OCC}</set>
   	   		 WHERE DID = #{item.DORMITORY_ID}
   	   	</foreach>  
	</update>
</mapper>